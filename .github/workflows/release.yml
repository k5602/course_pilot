name: Release Pipeline
on:
  push:
    tags:
      - 'v*.*.*' # Trigger on tags like v1.0.0, v1.2.3, etc.

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            course_pilot/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('course_pilot/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libxdo3 \
            libxdo-dev \
            patchelf \
            pkg-config
      
      - name: Install Dioxus CLI
        run: cargo install dioxus-cli
      
      - name: Build Dioxus app for Linux
        run: dx build --release --platform desktop
        working-directory: ./course_pilot
      
      - name: Package Linux build
        run: |
          mkdir -p release-artifacts
          cp ./course_pilot/target/release/course_pilot ./release-artifacts/
          chmod +x ./release-artifacts/course_pilot
          tar -czf course-pilot-linux-x64.tar.gz -C release-artifacts course_pilot
      
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: course-pilot-linux
          path: course-pilot-linux-x64.tar.gz

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            course_pilot/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('course_pilot/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      
      - name: Install Dioxus CLI
        run: cargo install dioxus-cli
      
      - name: Build Dioxus app for Windows
        run: dx build --release --platform desktop
        working-directory: ./course_pilot
        env:
          RUSTFLAGS: "-C target-feature=+crt-static"
      
      - name: Package Windows build
        run: |
          mkdir release-artifacts
          Copy-Item ./course_pilot/target/release/course_pilot.exe ./release-artifacts/
          Compress-Archive -Path ./release-artifacts/* -DestinationPath course-pilot-windows-x64.zip
      
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: course-pilot-windows
          path: course-pilot-windows-x64.zip

  create-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: course-pilot-linux
      
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: course-pilot-windows
      
      - name: Generate changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            sed -n '/^## \[/,/^## \[/p' CHANGELOG.md | head -n -1 >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "changelog=Auto-generated release for ${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            course-pilot-linux-x64.tar.gz
            course-pilot-windows-x64.zip
          tag_name: ${{ github.ref_name }}
          name: Course Pilot ${{ github.ref_name }}
          body: |
            ## Course Pilot ${{ github.ref_name }}
            
            ### Download Instructions:
            
            **üêß Linux (x64):**
            ```bash
            # Download and extract
            wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/course-pilot-linux-x64.tar.gz
            tar -xzf course-pilot-linux-x64.tar.gz
            ./course_pilot
            ```
            
            **ü™ü Windows (x64):**
            1. Download `course-pilot-windows-x64.zip`
            2. Extract the contents
            3. Double-click `course_pilot.exe` to run
            
            ### System Requirements:
            - **Linux**: Ubuntu 20.04+ or equivalent (with GTK3 and WebKit2GTK)
            - **Windows**: Windows 10 version 1903+ or Windows 11
            
            ---
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
