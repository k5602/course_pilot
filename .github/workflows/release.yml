name: Release Pipeline
on:
  push:
    tags:
      - '0.1.*' # Trigger on tags like 0.1.0, 0.1.1, 0.1.2, etc.

permissions:
  contents: write  

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            course_pilot/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Install Linux dependencies
        run: sudo apt-get update && sudo apt-get install -y libwebkit2gtk-4.1-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf
      
      - name: Build Dioxus app for Linux
        run: cargo build --release
        working-directory: ./course_pilot
      
      - name: Package Linux build
        run: |
          mkdir -p release-artifacts
          cp ./course_pilot/target/release/course_pilot ./release-artifacts/
          chmod +x ./release-artifacts/course_pilot
          tar -czf course-pilot-linux-x64.tar.gz -C release-artifacts course_pilot
      
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: course-pilot-linux
          path: course-pilot-linux-x64.tar.gz

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            course_pilot/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Build Dioxus app for Windows
        run: cargo build --release
        working-directory: ./course_pilot
        env:
          # Add Windows system libraries to the linker
          RUSTFLAGS: "-L native=C:/Program Files (x86)/Windows Kits/10/Lib/10.0.22621.0/um/x64 -L native=C:/Program Files (x86)/Windows Kits/10/Lib/10.0.22621.0/ucrt/x64"
      
      - name: Package Windows build
        run: |
          mkdir release-artifacts
          Copy-Item ./course_pilot/target/release/course_pilot.exe ./release-artifacts/
          Compress-Archive -Path ./release-artifacts/* -DestinationPath course-pilot-windows-x64.zip
      
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: course-pilot-windows
          path: course-pilot-windows-x64.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            course_pilot/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Build Dioxus app for macOS
        run: cargo build --release
        working-directory: ./course_pilot
      
      - name: Package macOS build
        run: |
          mkdir -p release-artifacts
          cp ./course_pilot/target/release/course_pilot ./release-artifacts/
          chmod +x ./release-artifacts/course_pilot
          tar -czf course-pilot-macos-x64.tar.gz -C release-artifacts course_pilot
      
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: course-pilot-macos
          path: course-pilot-macos-x64.tar.gz

  create-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos]
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: course-pilot-linux
      
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: course-pilot-windows
      
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: course-pilot-macos
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            course-pilot-linux-x64.tar.gz
            course-pilot-windows-x64.zip
            course-pilot-macos-x64.tar.gz
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Release Notes ${{ github.ref_name }}
            
            This release includes binaries for Linux, Windows, and macOS.
            
            ### How to use:
            
            **Linux:**
            1. Download `course-pilot-linux-x64.tar.gz`
            2. Extract: `tar -xzf course-pilot-linux-x64.tar.gz`
            3. Run: `./course_pilot`
            
            **Windows:**
            1. Download `course-pilot-windows-x64.zip`
            2. Extract the contents
            3. Run `course_pilot.exe`
            
            **macOS:**
            1. Download `course-pilot-macos-x64.tar.gz`
            2. Extract: `tar -xzf course-pilot-macos-x64.tar.gz`
            3. Run: `./course_pilot`
